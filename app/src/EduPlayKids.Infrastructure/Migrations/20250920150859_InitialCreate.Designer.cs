// <auto-generated />
using System;
using EduPlayKids.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduPlayKids.Infrastructure.Migrations
{
    [DbContext(typeof(EduPlayKidsDbContext))]
    [Migration("20250920150859_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AchievementType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("BadgeColor")
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<string>("BadgeIcon")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CelebrationMessageEn")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("CelebrationMessageEs")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Criteria")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionEn")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionEs")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EarnedCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCrownChallenge")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRepeatable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<int>("MinAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NameEs")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("AudioInstructionEnPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("AudioInstructionEsPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AverageCompletionTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AverageStarRating")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfigurationData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurriculumStandards")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionEn")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionEs")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DifficultyLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstimatedMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstructionEn")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("InstructionEs")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCrownChallenge")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LearningObjectives")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxAge")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinAge")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prerequisites")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RequiresPremium")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SuccessCriteria")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbnailPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleEs")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.ActivityQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessibilityFeatures")
                        .HasColumnType("TEXT");

                    b.Property<int>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AllowMultipleAttempts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfigurationData")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("TEXT");

                    b.Property<int>("CorrectAnswerCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DifficultyLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExplanationEn")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExplanationEs")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("HintAudioEnPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("HintAudioEsPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("HintEn")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("HintEs")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<bool>("HintsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LearningTags")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxAttempts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MediaAssets")
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionAudioEnPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionAudioEsPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionTextEn")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionTextEs")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeLimitSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalAttemptCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityQuestions");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AppVersion")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ChildId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComplianceData")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContextData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("DurationMs")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityType")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NewValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("OldValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("RequiresAttention")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RetentionClass")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RetentionExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReviewedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AudioInstructionsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("DifficultyPreference")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FavoriteSubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GradeLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdvanced")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastActivityAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LearningProfile")
                        .HasColumnType("TEXT");

                    b.Property<int>("LearningStreak")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("NeedsExtraHelp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreferredLanguage")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalLearningTimeMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalStarsEarned")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FavoriteSubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AchievementsEarned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivitiesCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppVersion")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("AudioPlaysCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChildId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CorrectAnswers")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DailyLimitMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmotionalStates")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndReason")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ExceededTimeLimit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HintsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InteractionPatterns")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LanguageUsed")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ParentalControlsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PerformanceMetrics")
                        .HasColumnType("TEXT");

                    b.Property<int>("PointsScored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreviousDailyUsageMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrivacySettings")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuestionsAnswered")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SessionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("StarsEarned")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectsAccessed")
                        .HasColumnType("TEXT");

                    b.Property<string>("TechnicalMetadata")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessibilitySettings")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AchievementNotificationsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AdaptiveLearningEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimationSpeed")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("AppLanguage")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("AudioInstructionsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AudioLanguage")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("BackgroundMusicEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedtimeEndHour")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BedtimeRestrictionsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedtimeStartHour")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChildSafetySettings")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CrownChallengesEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomLearningGoals")
                        .HasColumnType("TEXT");

                    b.Property<int>("DailyTimeLimitMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataCollectionPreferences")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultDifficulty")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("HapticFeedbackEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MasterVolume")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<int>("MusicVolume")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedsSync")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NotificationPreferences")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ParentalControlsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProgressReportFrequency")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ProgressReportsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ReminderNotificationsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SettingsVersion")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SoundEffectsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoundEffectsVolume")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VoiceVolume")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurriculumStandards")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionEn")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionEs")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("EstimatedCompletionHours")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LearningObjectives")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxAge")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinAge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NameEs")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prerequisites")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimaryColor")
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<bool>("RequiresPremium")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecondaryColor")
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoRenewalEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BillingCycle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CancelledAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalSubscriptionId")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FeatureAccess")
                        .HasColumnType("TEXT");

                    b.Property<int>("GracePeriodDays")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("GracePeriodEndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastPaymentRetryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastTransactionId")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NeedsSync")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NextBillingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentProvider")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentRetryAttempts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PriceCents")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PromotionalData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int>("SubscriptionVersion")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TrialEndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsageLimits")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DailyUsageLimitMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FreeTrialExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ParentalControlsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParentalPin")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferredLanguage")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PremiumExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.UserAchievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AchievementId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BonusMultiplier")
                        .HasColumnType("TEXT");

                    b.Property<bool>("CelebrationShown")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChildId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentProgress")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EarnedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EarnedContext")
                        .HasColumnType("TEXT");

                    b.Property<int>("EarnedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmotionalReaction")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEarned")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInProgress")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NeedsSync")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("PointsEarned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ProgressStartedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetProgress")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("ChildId");

                    b.ToTable("UserAchievements");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.UserProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnalyticsData")
                        .HasColumnType("TEXT");

                    b.Property<int>("AttemptCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChildId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CorrectAnswers")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DifficultyLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmotionalState")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FirstAttemptAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("HintsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCrownChallenge")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastAttemptAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxPossibleScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NeededExtraHelp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedsSync")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProgressData")
                        .HasColumnType("TEXT");

                    b.Property<int>("StarsEarned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeSpentSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalScore")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ChildId");

                    b.ToTable("UserProgress");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Achievement", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Activity", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.Subject", "Subject")
                        .WithMany("Activities")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.ActivityQuestion", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.Activity", "Activity")
                        .WithMany("Questions")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.AuditLog", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.Child", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId");

                    b.HasOne("EduPlayKids.Domain.Entities.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId");

                    b.Navigation("Child");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Child", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.Subject", "FavoriteSubject")
                        .WithMany("FavoritedByChildren")
                        .HasForeignKey("FavoriteSubjectId");

                    b.HasOne("EduPlayKids.Domain.Entities.User", "User")
                        .WithMany("Children")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavoriteSubject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Session", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.Child", "Child")
                        .WithMany("Sessions")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Settings", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Subscription", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.User", "User")
                        .WithOne("Subscription")
                        .HasForeignKey("EduPlayKids.Domain.Entities.Subscription", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.UserAchievement", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.Achievement", "Achievement")
                        .WithMany("UserAchievements")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduPlayKids.Domain.Entities.Child", "Child")
                        .WithMany("Achievements")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("Child");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.UserProgress", b =>
                {
                    b.HasOne("EduPlayKids.Domain.Entities.Activity", "Activity")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduPlayKids.Domain.Entities.Child", "Child")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Child");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Achievement", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Activity", b =>
                {
                    b.Navigation("ProgressRecords");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Child", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("ProgressRecords");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.Subject", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("FavoritedByChildren");
                });

            modelBuilder.Entity("EduPlayKids.Domain.Entities.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Children");

                    b.Navigation("Subscription");
                });
#pragma warning restore 612, 618
        }
    }
}
